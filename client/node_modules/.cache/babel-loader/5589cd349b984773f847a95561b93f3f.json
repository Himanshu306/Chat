{"ast":null,"code":"var _jsxFileName = \"D:\\\\CHAT-APP\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\";\nimport React, { useState, useEffect } from \"react\";\nimport queryString from 'query-string';\nimport io from \"socket.io-client\";\nimport TextContainer from '../TextContainer/TextContainer';\nimport Messages from '../Messages/Messages';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport './Chat.css';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'https://project-chat-application.herokuapp.com/';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setRoom(room);\n    setName(name);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n    socket.on('roomData', ({\n      users\n    }) => {\n      setUsers(users);\n    });\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(InfoBar, {\n    room: room,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), React.createElement(Messages, {\n    messages: messages,\n    name: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(Input, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })), React.createElement(TextContainer, {\n    users: users,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["D:/CHAT-APP/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","TextContainer","Messages","InfoBar","Input","socket","Chat","location","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","error","alert","on","off","sendMessage","event","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport queryString from 'query-string';\r\n\r\nimport io from \"socket.io-client\";\r\n\r\n\r\n\r\nimport TextContainer from '../TextContainer/TextContainer';\r\n\r\nimport Messages from '../Messages/Messages';\r\n\r\nimport InfoBar from '../InfoBar/InfoBar';\r\n\r\nimport Input from '../Input/Input';\r\n\r\n\r\n\r\nimport './Chat.css';\r\n\r\n\r\n\r\nlet socket;\r\n\r\n\r\n\r\nconst Chat = ({ location }) => {\r\n\r\n  const [name, setName] = useState('');\r\n\r\n  const [room, setRoom] = useState('');\r\n\r\n  const [users, setUsers] = useState('');\r\n\r\n  const [message, setMessage] = useState('');\r\n\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const ENDPOINT = 'https://project-chat-application.herokuapp.com/';\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const { name, room } = queryString.parse(location.search);\r\n\r\n\r\n\r\n    socket = io(ENDPOINT);\r\n\r\n\r\n\r\n    setRoom(room);\r\n\r\n    setName(name)\r\n\r\n\r\n\r\n    socket.emit('join', { name, room }, (error) => {\r\n\r\n      if(error) {\r\n\r\n        alert(error);\r\n\r\n      }\r\n\r\n    });\r\n\r\n  }, [ENDPOINT, location.search]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    socket.on('message', (message) => {\r\n\r\n      setMessages([...messages, message ]);\r\n\r\n    });\r\n\r\n\r\n\r\n    socket.on('roomData', ({ users }) => {\r\n\r\n      setUsers(users);\r\n\r\n    })\r\n\r\n\r\n\r\n    return () => {\r\n\r\n      socket.emit('disconnect');\r\n\r\n\r\n\r\n      socket.off();\r\n\r\n    }\r\n\r\n  }, [messages])\r\n\r\n\r\n\r\n  const sendMessage = (event) => {\r\n\r\n    event.preventDefault();\r\n\r\n\r\n\r\n    if(message) {\r\n\r\n      socket.emit('sendMessage', message, () => setMessage(''));\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"outerContainer\">\r\n\r\n      <div className=\"container\">\r\n\r\n          <InfoBar room={room} />\r\n\r\n          <Messages messages={messages} name={name} />\r\n\r\n          <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n\r\n      </div>\r\n\r\n      <TextContainer users={users}/>\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}